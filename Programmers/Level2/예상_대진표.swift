/*
  △△ 게임대회가 개최되었습니다. 
  이 대회는 N명이 참가하고, 토너먼트 형식으로 진행됩니다. 
  N명의 참가자는 각각 1부터 N번을 차례대로 배정받습니다. 
  그리고, 1번↔2번, 3번↔4번, ... , N-1번↔N번의 참가자끼리 게임을 진행합니다. 
  각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있습니다. 
  이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다. 게임은 최종 한 명이 남을 때까지 진행됩니다.

  이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌습니다. 
  게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때, 
  처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는 solution 함수를 완성해 주세요. 
  단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정합니다.

  => A와 B가 만나게 될 경우는 A와 B 중 홀수에 +1을 해준 값을 반으로 나눠준 값과 짝수를 반으로 나눠준 값이 같을 때입니다.
*/

func solution(_ n:Int, _ a:Int, _ b:Int) -> Int
{
    var re = 0
    var new_A = a, new_B = b

    while new_A != new_B{
        new_A = new_A%2 == 0 ? new_A/2 : (new_A+1)/2
        new_B = new_B%2 == 0 ? new_B/2 : (new_B+1)/2
        re += 1
    }
    return re
}
